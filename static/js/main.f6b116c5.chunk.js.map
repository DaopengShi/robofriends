{"version":3,"sources":["components/Card.js","components/CardList.js","components/CounterButton.js","components/Header.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","actions.js","constants.js","serviceWorker.js","reducers.js","index.js"],"names":["Card","_ref","id","name","email","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","robot","components_Card","key","CounterButton","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateCount","setState","state","count","nextProps","nextState","console","log","color","onClick","Component","Header","components_CounterButton","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundary","hasError","error","info","App","onRequestRobots","_this$props","searchField","isPending","onSearchChange","filteredRobots","filter","toLowerCase","includes","components_Header","components_SearchBox","components_Scroll","components_ErrorBoundary","components_CardList","connect","searchRobots","requestRobots","dispatch","event","payload","target","value","fetch","then","response","json","data","catch","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initialStateSearch","initialStateRobots","rootReducer","createLogger","combineReducers","arguments","length","undefined","action","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_containers_App","document","getElementById","URL","process","href","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f6b116c5.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({id, name, email}) => {\n\treturn (\n\t\t<div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc'>\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?size=250x250`} />\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n  // if (true) {\n  //   throw new Error('NOOOOO!');\n  // }\n  // console.log('CardList', robots.length);\n\treturn (\n\t\t<div>\n\t\t\t{robots.map((robot) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Card \n\t\t\t\t\t\tkey={robot.id} \n\t\t\t\t\t\tid={robot.id} \n\t\t\t\t\t\tname={robot.name} \n\t\t\t\t\t\temail={robot.email}/>\n\t\t\t\t)\n\t\t\t})}\n\t\t</div>\n\t);\n}\n\nexport default CardList;","import React, {Component} from 'react';\n\nclass CounterButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.count !== nextState.count) {\n      console.log(this.state.count, nextState.count);\n      return true;\n    }\n    else {\n      return false;\n    }  \n  }\n\n  updateCount = () => {\n    this.setState(state => {\n      return {count: state.count + 1};\n    });\n  }\n\n  render() {\n    // console.log('CounterButton');\n    return (\n      <button color={this.props.color} onClick={this.updateCount}>\n        Count: {this.state.count}\n      </button>\n    );\n  }\n}\n\nexport default CounterButton;","import React, {Component} from 'react';\nimport CounterButton from './CounterButton';\n\nclass Header extends Component {\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   return false;\n  // }\n\n  render() {\n    // console.log('Header');\n    return (\n      <div>\n        <h1 className='f1'>RoboFriends</h1>\n        <CounterButton color={'red'} />\n      </div>\n    );\n  }\n}\n\nexport default Header;","import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n\treturn (\n\t\t<div className='pa2'>\n      <label>\n  \t\t\t<input \n  \t\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\n  \t\t\t\ttype='search' \n  \t\t\t\tplaceholder='search robots'\n  \t\t\t\tonChange={searchChange} \n  \t\t\t/>\n      </label>\n\t\t</div>\n\t);\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n}\n\n\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({hasError: true});\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Ooooops, that is not good</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport CardList from '../components/CardList';\nimport Header from '../components/Header';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport './App.css';\n\nimport {setSearchField, requestRobots} from '../actions';\n\nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchRobots.searchField,\n    isPending: state.requestRobots.isPending,\n    robots: state.requestRobots.robots,\n    error: state.requestRobots.error\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => {\n      dispatch(setSearchField(event.target.value));\n    },\n    onRequestRobots: () => dispatch(requestRobots())\n  }\n}\n\nclass App extends Component {\n\n\tcomponentDidMount() {\n    this.props.onRequestRobots();\n\t}\n\n\trender() {\n\t\t// const {robots} = this.state;\n    const {searchField, isPending, robots, onSearchChange, error} = this.props;\n\t\tconst filteredRobots = robots.filter(\n\t\t\t(robot) => robot.name.toLowerCase().includes(searchField.toLowerCase())\n\t\t);\n\n    console.log(\"App5\", isPending);\n\n    if (isPending) {\n      return <h1>Loading</h1>;\n    }\n    else if (error) {\n      return (\n        <div className='tc'>\n          <Header />\n          <SearchBox searchChange={onSearchChange}/>\n          <Scroll>\n            <ErrorBoundary >\n              <h1>Loading</h1>\n            </ErrorBoundary>\n          </Scroll>\n        </div>\n      );\n    }\n    else {\n      return (\n        <div className='tc'>\n          <Header />\n          <SearchBox searchChange={onSearchChange}/>\n          <Scroll>\n            <ErrorBoundary >\n              <CardList robots={filteredRobots}/>\n            </ErrorBoundary>\n          </Scroll>\n        </div>\n      );\n    }\n\n\t\t// return isPending ? \n\t\t// \t<h1>Loading</h1> :\n\t\t// \t(\n\t\t// \t\t<div className='tc'>\n\t\t// \t\t\t<Header />\n\t\t// \t\t\t<SearchBox searchChange={onSearchChange}/>\n\t\t// \t\t\t<Scroll>\n  //           <ErrorBoundary >\n\t\t// \t\t\t\t  <CardList robots={filteredRobots}/>\n  //           </ErrorBoundary>\n\t\t// \t\t\t</Scroll>\n\t\t// \t\t</div>\n\t\t// \t);\n\t\t\n\t}\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED\n} from './constants';\n\nexport const setSearchField = (text) => {\n  // console.log(\"action\");\n  return {\n    type: CHANGE_SEARCH_FIELD,\n    payload: text\n  };\n}\n\nexport const requestRobots = () => (dispatch) => {\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\n  .then(response => response.json())\n  .then(data => dispatch({ \n    type: REQUEST_ROBOTS_SUCCESS,\n    payload: data\n  }))\n  .catch(error => dispatch({\n    type: REQUEST_ROBOTS_FAILED,\n    payload: error\n  }));\n}\n\n\n\n","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\n\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED\n} from './constants';\n\nconst initialStateSearch = {\n  searchField: ''\n}\n\nexport const searchRobots = (state=initialStateSearch, action={}) => {\n  // console.log(\"reducer\");\n  switch(action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return Object.assign({}, state, {searchField: action.payload});\n    default:\n      return state;\n  }\n}\n\nconst initialStateRobots = {\n  isPending: true,\n  robots: [],\n  error: ''  \n}\n\nexport const requestRobots = (state=initialStateRobots, action={}) => {\n  switch(action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, {isPending: true});\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, {robots: action.payload, isPending: false});\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, {error: action.payload, isPending: false});\n    default:\n      return state;    \n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, combineReducers} from 'redux';\nimport {createLogger} from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\n// import App from './App';\n// import Card from './Card';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport {searchRobots, requestRobots} from './reducers';\nimport 'tachyons';\n// import {robots} from './robots';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({searchRobots, requestRobots});\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}